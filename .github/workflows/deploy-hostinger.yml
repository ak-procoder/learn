name: Generate a build and push to another branch

on:
  push:
    branches:
      - main # The branch name your are commit the new changes

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push
    steps:
      - uses: actions/checkout@v5

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

#      - name: Test
#        run: npm test

      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build # The branch name where you want to push the assets
          FOLDER: out # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message
          NAME: "github-actions[bot]" # The name you want to appear as the committer
          EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"  # The email you want to appear as the committer\
          FORCE: true # Whether to force push or not
          CLEAN: true # Whether to remove all files before pushing
          