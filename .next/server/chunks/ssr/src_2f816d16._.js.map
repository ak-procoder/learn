{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/akusel979%40cable.comcast.com/GHE/learning/learning/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/akusel979%40cable.comcast.com/GHE/learning/learning/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/akusel979%40cable.comcast.com/GHE/learning/learning/src/data/courses.ts"],"sourcesContent":["export interface Course {\n  id: string\n  title: string\n  description: string\n  shortDescription: string\n  level: 'Beginner' | 'Intermediate' | 'Advanced'\n  category: string\n  skills: string[]\n}\n\nexport const courseCategories = [\n  'All Courses',\n  'Networking',\n  'Computer Science'\n]\n\nexport const courses: Course[] = [\n  {\n    id: 'computer-networks',\n    title: 'Computer Networks Fundamentals',\n    description: 'Master the fundamentals of computer networking including network protocols, architectures, and technologies. Learn how data flows through networks, understand TCP/IP, OSI model, routing, switching, and network security basics. Perfect for students pursuing careers in IT, network administration, or computer science.',\n    shortDescription: 'Learn the fundamentals of computer networking and protocols',\n    level: 'Beginner',\n    category: 'Networking',\n    skills: ['TCP/IP', 'OSI Model', 'Routing', 'Switching', 'Network Security', 'Protocols']\n  }\n]\n\nexport const getCoursesbyCategory = (category: string): Course[] => {\n  if (category === 'All Courses') {\n    return courses\n  }\n  return courses.filter(course => course.category === category)\n}"],"names":[],"mappings":";;;;;;;;AAUO,MAAM,mBAAmB;IAC9B;IACA;IACA;CACD;AAEM,MAAM,UAAoB;IAC/B;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,kBAAkB;QAClB,OAAO;QACP,UAAU;QACV,QAAQ;YAAC;YAAU;YAAa;YAAW;YAAa;YAAoB;SAAY;IAC1F;CACD;AAEM,MAAM,uBAAuB,CAAC;IACnC,IAAI,aAAa,eAAe;QAC9B,OAAO;IACT;IACA,OAAO,QAAQ,MAAM,CAAC,CAAA,SAAU,OAAO,QAAQ,KAAK;AACtD","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/akusel979%40cable.comcast.com/GHE/learning/learning/src/data/course-loader.ts"],"sourcesContent":["import { CourseContent, CourseTopic } from './types/course-types'\n\n// Course registry - add new courses here\nconst courseRegistry = {\n  'computer-networks': () => import('./courses/computer-networks').then(m => m.computerNetworksContent),\n  // Future courses can be added here:\n  'web-development': () => import('./courses/web-development').then(m => m.webDevelopmentContent),\n  // 'database-fundamentals': () => import('./courses/database-fundamentals').then(m => m.databaseFundamentalsContent),\n}\n\ntype CourseId = keyof typeof courseRegistry\n\n// Cache for loaded courses to avoid repeated imports\nconst courseCache = new Map<string, CourseContent>()\n\n/**\n * Get course content by course ID\n * Uses dynamic imports for better performance and code splitting\n */\nexport const getCourseContent = async (courseId: string): Promise<CourseContent | undefined> => {\n  // Check cache first\n  if (courseCache.has(courseId)) {\n    return courseCache.get(courseId)\n  }\n\n  // Check if course exists in registry\n  if (!(courseId in courseRegistry)) {\n    console.warn(`Course '${courseId}' not found in registry`)\n    return undefined\n  }\n\n  try {\n    // Dynamically import the course content\n    const courseLoader = courseRegistry[courseId as CourseId]\n    const courseContent = await courseLoader()\n    \n    // Cache the result\n    courseCache.set(courseId, courseContent)\n    \n    return courseContent\n  } catch (error) {\n    console.error(`Failed to load course '${courseId}':`, error)\n    return undefined\n  }\n}\n\n/**\n * Get a specific topic from a course\n */\nexport const getTopicById = async (courseId: string, topicId: string): Promise<CourseTopic | undefined> => {\n  const content = await getCourseContent(courseId)\n  return content?.topics.find(topic => topic.id === topicId)\n}\n\n/**\n * Get all available course IDs\n */\nexport const getAvailableCourseIds = (): string[] => {\n  return Object.keys(courseRegistry)\n}\n\n/**\n * Preload a course (useful for better UX)\n */\nexport const preloadCourse = async (courseId: string): Promise<void> => {\n  await getCourseContent(courseId)\n}\n\n/**\n * Clear course cache (useful for development/testing)\n */\nexport const clearCourseCache = (): void => {\n  courseCache.clear()\n}"],"names":[],"mappings":";;;;;;;;;;;;AAEA,yCAAyC;AACzC,MAAM,iBAAiB;IACrB,qBAAqB,IAAM,gHAAsC,IAAI,CAAC,CAAA,IAAK,EAAE,uBAAuB;IACpG,oCAAoC;IACpC,mBAAmB,IAAM,8GAAoC,IAAI,CAAC,CAAA,IAAK,EAAE,qBAAqB;AAEhG;AAIA,qDAAqD;AACrD,MAAM,cAAc,IAAI;AAMjB,MAAM,mBAAmB,OAAO;IACrC,oBAAoB;IACpB,IAAI,YAAY,GAAG,CAAC,WAAW;QAC7B,OAAO,YAAY,GAAG,CAAC;IACzB;IAEA,qCAAqC;IACrC,IAAI,CAAC,CAAC,YAAY,cAAc,GAAG;QACjC,QAAQ,IAAI,CAAC,CAAC,QAAQ,EAAE,SAAS,uBAAuB,CAAC;QACzD,OAAO;IACT;IAEA,IAAI;QACF,wCAAwC;QACxC,MAAM,eAAe,cAAc,CAAC,SAAqB;QACzD,MAAM,gBAAgB,MAAM;QAE5B,mBAAmB;QACnB,YAAY,GAAG,CAAC,UAAU;QAE1B,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,uBAAuB,EAAE,SAAS,EAAE,CAAC,EAAE;QACtD,OAAO;IACT;AACF;AAKO,MAAM,eAAe,OAAO,UAAkB;IACnD,MAAM,UAAU,MAAM,iBAAiB;IACvC,OAAO,SAAS,OAAO,KAAK,CAAA,QAAS,MAAM,EAAE,KAAK;AACpD;AAKO,MAAM,wBAAwB;IACnC,OAAO,OAAO,IAAI,CAAC;AACrB;AAKO,MAAM,gBAAgB,OAAO;IAClC,MAAM,iBAAiB;AACzB;AAKO,MAAM,mBAAmB;IAC9B,YAAY,KAAK;AACnB","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///Users/akusel979%40cable.comcast.com/GHE/learning/learning/src/components/course/embla-carousel.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useCallback, useEffect, useState, useRef } from 'react'\nimport { EmblaOptionsType, EmblaCarouselType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport Fade from 'embla-carousel-fade'\nimport { ChevronLeft, ChevronRight, BookOpen, ChevronDown } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { CourseSlide } from '@/data/types/course-types'\n\ntype PropType = {\n  slides: CourseSlide[]\n  options?: EmblaOptionsType\n  onSlideChange?: (index: number) => void\n  onComplete?: () => void\n}\n\n// Function to parse and format slide content\nconst formatSlideContent = (content: string) => {\n  const lines = content.split('\\n')\n  const sections: Array<{type: 'heading' | 'bullet' | 'text' | 'code', content: string, level?: number}> = []\n  \n  lines.forEach(line => {\n    const trimmed = line.trim()\n    if (!trimmed) return\n    \n    // Detect headings with **text:**\n    if (trimmed.match(/^\\*\\*.*:\\*\\*$/)) {\n      sections.push({\n        type: 'heading',\n        content: trimmed.replace(/^\\*\\*/, '').replace(/:\\*\\*$/, ''),\n        level: 1\n      })\n    }\n    // Detect subheadings with **text**\n    else if (trimmed.match(/^\\*\\*.*\\*\\*$/) && !trimmed.includes(':')) {\n      sections.push({\n        type: 'heading',\n        content: trimmed.replace(/^\\*\\*/, '').replace(/\\*\\*$/, ''),\n        level: 2\n      })\n    }\n    // Detect bullet points\n    else if (trimmed.startsWith('•')) {\n      sections.push({\n        type: 'bullet',\n        content: trimmed.substring(1).trim()\n      })\n    }\n    // Detect code blocks\n    else if (trimmed.startsWith('`') && trimmed.endsWith('`')) {\n      sections.push({\n        type: 'code',\n        content: trimmed.slice(1, -1)\n      })\n    }\n    // Regular text\n    else {\n      sections.push({\n        type: 'text',\n        content: trimmed\n      })\n    }\n  })\n  \n  return sections\n}\n\nconst EmblaCarousel: React.FC<PropType> = (props) => {\n  const { slides, options, onSlideChange, onComplete } = props\n  const [emblaRef, emblaApi] = useEmblaCarousel(options, [Fade()])\n  const [prevBtnDisabled, setPrevBtnDisabled] = useState(true)\n  const [nextBtnDisabled, setNextBtnDisabled] = useState(true)\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const [scrollSnaps, setScrollSnaps] = useState<number[]>([])\n  const [scrollProgress, setScrollProgress] = useState(0)\n  const [isContentScrollable, setIsContentScrollable] = useState(false)\n  const [showScrollIndicator, setShowScrollIndicator] = useState(true)\n  const hasCompletedRef = useRef(false) // Use ref to avoid dependency issues\n\n  const scrollPrev = useCallback(\n    () => emblaApi && emblaApi.scrollPrev(),\n    [emblaApi]\n  )\n\n  const scrollNext = useCallback(\n    () => emblaApi && emblaApi.scrollNext(),\n    [emblaApi]\n  )\n\n  const scrollTo = useCallback(\n    (index: number) => emblaApi && emblaApi.scrollTo(index),\n    [emblaApi]\n  )\n\n  // Function to check if content is scrollable\n  const checkScrollable = useCallback((element: HTMLElement | null) => {\n    if (element) {\n      const isScrollable = element.scrollHeight > element.clientHeight\n      setIsContentScrollable(isScrollable)\n      if (isScrollable) {\n        setShowScrollIndicator(true)\n        // Hide scroll indicator after 3 seconds\n        setTimeout(() => setShowScrollIndicator(false), 3000)\n      }\n    }\n  }, [])\n\n  // Handle scroll events to hide indicator when user scrolls\n  const handleScroll = useCallback((e: React.UIEvent<HTMLDivElement>) => {\n    const target = e.target as HTMLDivElement\n    if (target.scrollTop > 20) {\n      setShowScrollIndicator(false)\n    }\n  }, [])\n\n  const onInit = useCallback((emblaApi: EmblaCarouselType) => {\n    setScrollSnaps(emblaApi.scrollSnapList())\n  }, [])\n\n  const onSelect = useCallback((emblaApi: EmblaCarouselType) => {\n    const newIndex = emblaApi.selectedScrollSnap()\n    setSelectedIndex(newIndex)\n    setPrevBtnDisabled(!emblaApi.canScrollPrev())\n    setNextBtnDisabled(!emblaApi.canScrollNext())\n    \n    // Notify parent of slide change\n    onSlideChange?.(newIndex)\n    \n    // Check if this is the last slide and call onComplete (only once)\n    if (newIndex === slides.length - 1 && !hasCompletedRef.current) {\n      hasCompletedRef.current = true\n      onComplete?.()\n    }\n  }, [onSlideChange, onComplete, slides.length])\n\n  const onScroll = useCallback((emblaApi: EmblaCarouselType) => {\n    const progress = Math.max(0, Math.min(1, emblaApi.scrollProgress()))\n    setScrollProgress(progress * 100)\n  }, [])\n\n  useEffect(() => {\n    if (!emblaApi) return\n\n    onInit(emblaApi)\n    onSelect(emblaApi)\n    onScroll(emblaApi)\n    emblaApi.on('reInit', onInit)\n    emblaApi.on('reInit', onSelect)\n    emblaApi.on('select', onSelect)\n    emblaApi.on('scroll', onScroll)\n\n    // Add keyboard navigation for vertical scrolling\n    const handleKeyDown = (event: KeyboardEvent) => {\n      const activeSlide = document.querySelector('.embla__slide__scrollable')\n      if (activeSlide && (event.key === 'ArrowUp' || event.key === 'ArrowDown')) {\n        event.preventDefault()\n        const scrollAmount = event.key === 'ArrowDown' ? 100 : -100\n        activeSlide.scrollBy({ top: scrollAmount, behavior: 'smooth' })\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n    \n    return () => {\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [emblaApi, onInit, onSelect, onScroll])\n\n  // Reset completion state when slides change (new topic selected)\n  useEffect(() => {\n    hasCompletedRef.current = false\n    setSelectedIndex(0)\n  }, [slides])\n\n  return (\n    <div className=\"embla h-full flex flex-col bg-gradient-to-br from-background/50 to-primary/5\">\n      {/* Main Carousel */}\n      <div className=\"embla__viewport flex-1\" ref={emblaRef}>\n        <div className=\"embla__container h-full\">\n          {slides.map((slide) => (\n            <div className=\"embla__slide h-full\" key={slide.id}>\n              <div className=\"embla__slide__content h-full p-8 flex flex-col\">\n                <div className=\"max-w-5xl mx-auto w-full h-full flex flex-col\">\n                  <Card className=\"h-full border border-border/20 shadow-2xl bg-gradient-to-br from-card/90 via-card to-card/95 backdrop-blur-xl flex flex-col\">\n                    <CardHeader className=\"flex-shrink-0 pb-6 bg-gradient-to-r from-primary/5 via-secondary/5 to-accent/5 rounded-t-lg border-b border-border/10\">\n                      <div className=\"flex items-center gap-4 mb-3\">\n                        <div className=\"p-3 bg-gradient-to-br from-primary to-secondary rounded-xl shadow-lg\">\n                          <BookOpen className=\"h-6 w-6 text-primary-foreground\" />\n                        </div>\n                        <Badge variant=\"secondary\" className=\"text-sm font-semibold bg-gradient-to-r from-accent/20 to-accent/10 text-accent-foreground border-accent/30 px-3 py-1\">\n                          Slide {slides.indexOf(slide) + 1} of {slides.length}\n                        </Badge>\n                      </div>\n                      <CardTitle className=\"text-4xl font-bold text-foreground leading-tight bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n                        {slide.title}\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent \n                      className=\"flex-1 overflow-y-auto p-8 embla__slide__scrollable relative\"\n                      onScroll={handleScroll}\n                      ref={(el) => {\n                        if (el) {\n                          checkScrollable(el)\n                        }\n                      }}\n                    >\n                      <div className=\"space-y-8 min-h-0\">\n                        {formatSlideContent(slide.content).map((section, index) => (\n                          <div key={index}>\n                            {section.type === 'heading' && section.level === 1 && (\n                              <h3 className=\"text-2xl font-bold text-primary mb-4 flex items-center gap-3 pb-2 border-b border-primary/20\">\n                                <div className=\"w-2 h-8 bg-gradient-to-b from-primary to-secondary rounded-full shadow-sm\"></div>\n                                <span className=\"bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">{section.content}</span>\n                              </h3>\n                            )}\n                            {section.type === 'heading' && section.level === 2 && (\n                              <h4 className=\"text-xl font-semibold text-foreground mb-3 ml-6 text-secondary\">\n                                {section.content}\n                              </h4>\n                            )}\n                            {section.type === 'bullet' && (\n                              <div className=\"flex items-start gap-4 ml-8 mb-3 group\">\n                                <div className=\"w-2 h-2 bg-gradient-to-r from-primary to-secondary rounded-full mt-2.5 shrink-0 shadow-sm group-hover:scale-125 transition-transform duration-200\"></div>\n                                <p className=\"text-muted-foreground leading-relaxed text-base group-hover:text-foreground transition-colors duration-200\">\n                                  {section.content}\n                                </p>\n                              </div>\n                            )}\n                            {section.type === 'code' && (\n                              <div className=\"ml-8 mb-4\">\n                                <code className=\"block bg-gradient-to-r from-muted/80 to-muted/60 border border-border/30 rounded-xl p-4 text-sm font-mono text-foreground shadow-inner backdrop-blur-sm\">\n                                  {section.content}\n                                </code>\n                              </div>\n                            )}\n                            {section.type === 'text' && (\n                              <p className=\"text-foreground leading-relaxed text-base ml-8 mb-4 bg-card/30 p-4 rounded-lg border border-border/20\">\n                                {section.content}\n                              </p>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                      \n                      {/* Scroll Indicator */}\n                      {isContentScrollable && showScrollIndicator && (\n                        <div className=\"absolute bottom-4 right-4 flex items-center gap-2 bg-primary/90 text-primary-foreground px-3 py-2 rounded-lg shadow-lg animate-bounce\">\n                          <ChevronDown className=\"h-4 w-4\" />\n                          <span className=\"text-sm font-medium\">Scroll for more</span>\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"embla__progress bg-gradient-to-r from-muted/30 via-muted/20 to-muted/30 relative overflow-hidden shadow-inner\">\n        <div \n          className=\"embla__progress__bar h-3 bg-gradient-to-r from-primary via-secondary to-accent transition-all duration-700 ease-out shadow-lg\"\n          style={{ transform: `translateX(-${100 - scrollProgress}%)` }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent animate-pulse\"></div>\n      </div>\n\n      {/* Controls */}\n      <div className=\"embla__controls p-6 border-t border-border/20 bg-gradient-to-r from-card/80 via-card/90 to-card/80 backdrop-blur-xl shadow-lg\">\n        <div className=\"flex items-center justify-between max-w-5xl mx-auto\">\n          {/* Navigation Buttons */}\n          <div className=\"flex items-center gap-4\">\n            <Button\n              variant=\"outline\"\n              size=\"default\"\n              onClick={scrollPrev}\n              disabled={prevBtnDisabled}\n              className=\"gap-2 shadow-lg hover:shadow-xl transition-all duration-300 border-primary/20 hover:border-primary/40 hover:bg-primary/5 rounded-xl px-6\"\n            >\n              <ChevronLeft className=\"h-5 w-5\" />\n              Previous\n            </Button>\n            <Button\n              size=\"default\"\n              onClick={scrollNext}\n              disabled={nextBtnDisabled}\n              className=\"gap-2 shadow-lg hover:shadow-xl transition-all duration-300 bg-gradient-to-r from-primary to-secondary hover:from-primary/90 hover:to-secondary/90 rounded-xl px-6\"\n            >\n              Next\n              <ChevronRight className=\"h-5 w-5\" />\n            </Button>\n          </div>\n\n          {/* Slide Indicator */}\n          <div className=\"flex items-center gap-8\">\n            <div className=\"text-center bg-card/50 p-3 rounded-xl border border-border/20\">\n              <div className=\"text-lg font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n                {selectedIndex + 1}\n              </div>\n              <div className=\"text-xs text-muted-foreground font-medium\">\n                of {slides.length}\n              </div>\n            </div>\n            <div className=\"text-center bg-card/50 p-3 rounded-xl border border-border/20\">\n              <div className=\"text-lg font-bold text-accent\">\n                {Math.round(scrollProgress)}%\n              </div>\n              <div className=\"text-xs text-muted-foreground font-medium\">\n                complete\n              </div>\n            </div>\n          </div>\n\n          {/* Dot Navigation */}\n          <div className=\"flex items-center gap-3\">\n            {scrollSnaps.map((_, index) => (\n              <button\n                key={index}\n                className={`w-4 h-4 rounded-full transition-all duration-300 hover:scale-125 shadow-md ${\n                  index === selectedIndex\n                    ? 'bg-gradient-to-r from-primary to-secondary shadow-xl ring-2 ring-primary/40 scale-110'\n                    : 'bg-muted-foreground/40 hover:bg-gradient-to-r hover:from-primary/50 hover:to-secondary/50'\n                }`}\n                onClick={() => scrollTo(index)}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmblaCarousel"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 817, "column": 0}, "map": {"version":3,"sources":["file:///Users/akusel979%40cable.comcast.com/GHE/learning/learning/src/app/course/%5Bid%5D/course-page-client.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { ArrowLeft, Clock, BookOpen, ChevronRight, Settings, CheckCircle } from 'lucide-react'\nimport Link from 'next/link'\n\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Card, CardContent, CardHeader } from '@/components/ui/card'\nimport { courses } from '@/data/courses'\nimport { getCourseContent } from '@/data/course-loader'\nimport { CourseTopic, CourseSlide, CourseContent } from '@/data/types/course-types'\nimport EmblaCarousel from '@/components/course/embla-carousel'\nimport '../../../components/course/embla.css'\n\ninterface CoursePageClientProps {\n  courseId: string\n}\n\nexport default function CoursePageClient({ courseId }: CoursePageClientProps) {\n  const [selectedTopic, setSelectedTopic] = useState<CourseTopic | null>(null)\n  const [currentSlides, setCurrentSlides] = useState<CourseSlide[]>([])\n  const [courseContent, setCourseContent] = useState<CourseContent | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [completedTopics, setCompletedTopics] = useState<Set<string>>(new Set())\n\n  const course = courses.find(c => c.id === courseId)\n\n  useEffect(() => {\n    const loadCourseContent = async () => {\n      setIsLoading(true)\n      try {\n        const content = await getCourseContent(courseId)\n        setCourseContent(content || null)\n        \n        // Auto-select first topic if available\n        if (content && content.topics.length > 0) {\n          const firstTopic = content.topics[0]\n          setSelectedTopic(firstTopic)\n          setCurrentSlides(firstTopic.slides)\n        }\n      } catch (error) {\n        console.error('Failed to load course content:', error)\n        setCourseContent(null)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    loadCourseContent()\n  }, [courseId])\n\n  const handleTopicSelect = (topic: CourseTopic) => {\n    setSelectedTopic(topic)\n    setCurrentSlides(topic.slides)\n  }\n\n  const handleSlideChange = (index: number) => {\n    // Slide change handler - can be used for tracking progress\n    console.log(`Slide changed to: ${index}`)\n  }\n\n  const handleTopicComplete = () => {\n    if (selectedTopic) {\n      setCompletedTopics(prev => new Set([...prev, selectedTopic.id]))\n    }\n  }\n\n  // Calculate overall progress\n  const totalTopics = courseContent?.topics.length || 0\n  const completedCount = completedTopics.size\n  const overallProgress = totalTopics > 0 ? (completedCount / totalTopics) * 100 : 0\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\"></div>\n          <h2 className=\"text-xl font-semibold text-foreground\">Loading Course...</h2>\n        </div>\n      </div>\n    )\n  }\n\n  // Course not found\n  if (!course || !courseContent) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-foreground mb-4\">Course Not Found</h1>\n          <p className=\"text-muted-foreground mb-6\">The course you&apos;re looking for doesn&apos;t exist.</p>\n          <Button asChild>\n            <Link href=\"/browse-courses\">Browse Courses</Link>\n          </Button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background/50 to-primary/5\">\n      {/* Header */}\n      <header className=\"border-b border-border/20 bg-card/80 backdrop-blur-xl supports-[backdrop-filter]:bg-card/60 sticky top-16 z-40 shadow-lg shadow-primary/5\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-6\">\n              <Button variant=\"ghost\" size=\"sm\" asChild className=\"gap-2 hover:bg-secondary/10 rounded-xl transition-all duration-200\">\n                <Link href=\"/browse-courses\">\n                  <ArrowLeft className=\"h-4 w-4\" />\n                  Back to Courses\n                </Link>\n              </Button>\n              <div className=\"h-8 w-px bg-gradient-to-b from-primary/20 to-secondary/20\" />\n              <div>\n                <h1 className=\"font-bold text-foreground text-xl bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">{course.title}</h1>\n                <p className=\"text-sm text-muted-foreground font-medium\">Computer Networking Course</p>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <Card className=\"px-6 py-3 bg-gradient-to-r from-primary/10 via-secondary/5 to-accent/10 border-primary/20 shadow-lg backdrop-blur-sm\">\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n                      {completedCount}/{totalTopics}\n                    </div>\n                    <div className=\"text-xs text-muted-foreground font-medium\">Topics</div>\n                  </div>\n                  <div className=\"w-20 h-3 bg-muted/50 rounded-full overflow-hidden shadow-inner\">\n                    <div \n                      className=\"h-full bg-gradient-to-r from-primary via-secondary to-accent transition-all duration-700 ease-out rounded-full shadow-sm\"\n                      style={{ width: `${overallProgress}%` }}\n                    />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-bold text-primary\">\n                      {Math.round(overallProgress)}%\n                    </div>\n                    <div className=\"text-xs text-muted-foreground font-medium\">Complete</div>\n                  </div>\n                </div>\n              </Card>\n              <Badge variant=\"outline\" className=\"bg-accent/10 border-accent/30 text-accent-foreground font-semibold px-3 py-1\">{course.level}</Badge>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content - Three Column Layout */}\n      <div className=\"flex h-[calc(100vh-8rem)]\">\n        {/* Sidebar - 20% */}\n        <aside className=\"w-[20%] border-r border-border/20 bg-gradient-to-b from-card/50 to-card/80 backdrop-blur-sm overflow-y-auto\">\n          <div className=\"p-6\">\n            <div className=\"mb-8\">\n              <h2 className=\"font-bold text-foreground mb-4 flex items-center gap-3 text-lg\">\n                <div className=\"p-2 bg-gradient-to-br from-primary to-secondary rounded-lg shadow-lg\">\n                  <BookOpen className=\"h-5 w-5 text-primary-foreground\" />\n                </div>\n                <span className=\"bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">Course Topics</span>\n              </h2>\n              <p className=\"text-sm text-muted-foreground mb-4 bg-card/50 p-3 rounded-lg\">\n                {completedCount}/{totalTopics} topics completed • {courseContent?.topics.length} topics available\n              </p>\n            </div>\n            <div className=\"space-y-4\">\n              {courseContent?.topics.map((topic, index) => (\n                <Card \n                  key={topic.id}\n                  className={`cursor-pointer transition-all duration-300 hover:shadow-xl hover:scale-[1.02] group ${\n                    selectedTopic?.id === topic.id\n                      ? 'ring-2 ring-primary bg-gradient-to-r from-primary/10 to-secondary/5 shadow-xl border-primary/30'\n                      : 'hover:bg-card/80 hover:border-primary/20 bg-card/40 backdrop-blur-sm'\n                  }`}\n                  onClick={() => handleTopicSelect(topic)}\n                >\n                  <CardContent className=\"p-5\">\n                    <div className=\"flex items-start justify-between mb-3\">\n                      <div className=\"flex items-center gap-3\">\n                        <Badge variant=\"outline\" className={`text-xs px-3 py-1 font-semibold ${\n                          selectedTopic?.id === topic.id\n                            ? 'bg-primary text-primary-foreground border-primary'\n                            : 'bg-muted text-muted-foreground'\n                        }`}>\n                          {index + 1}\n                        </Badge>\n                        {completedTopics.has(topic.id) && (\n                          <div className=\"flex items-center justify-center w-6 h-6 bg-gradient-to-r from-secondary to-accent rounded-full shadow-md\">\n                            <CheckCircle className=\"h-4 w-4 text-white\" />\n                          </div>\n                        )}\n                      </div>\n                      <ChevronRight className={`h-5 w-5 transition-all duration-300 ${\n                        selectedTopic?.id === topic.id ? 'rotate-90 text-primary' : 'text-muted-foreground group-hover:text-primary'\n                      }`} />\n                    </div>\n                    <h3 className={`font-semibold text-sm mb-2 line-clamp-1 leading-tight transition-colors duration-200 ${\n                      selectedTopic?.id === topic.id \n                        ? 'text-primary' \n                        : 'text-foreground group-hover:text-primary'\n                    }`}>\n                      {topic.title}\n                    </h3>\n                    <p className=\"text-xs text-muted-foreground line-clamp-2 mb-3 leading-relaxed\">\n                      {topic.description}\n                    </p>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2 text-xs text-muted-foreground bg-background/50 px-2 py-1 rounded-md\">\n                        <Clock className=\"h-3 w-3\" />\n                        <span className=\"font-medium\">{topic.duration}</span>\n                      </div>\n                      <div className=\"flex items-center gap-2 text-xs text-muted-foreground bg-background/50 px-2 py-1 rounded-md\">\n                        <BookOpen className=\"h-3 w-3\" />\n                        <span className=\"font-medium\">{topic.slides.length} slides</span>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </aside>\n\n        {/* Slide Area - 50% */}\n        <main className=\"w-[50%] bg-gradient-to-br from-background to-muted/10 relative\">\n          {currentSlides.length > 0 ? (\n            <EmblaCarousel \n              slides={currentSlides} \n              options={{ loop: false }} \n              onSlideChange={handleSlideChange}\n              onComplete={handleTopicComplete}\n            />\n          ) : (\n            <div className=\"h-full flex items-center justify-center p-8\">\n              <Card className=\"text-center max-w-md bg-gradient-to-br from-background to-muted/20 shadow-lg\">\n                <CardContent className=\"p-8\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <BookOpen className=\"h-8 w-8 text-primary\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-foreground mb-3\">\n                    Ready to Learn?\n                  </h3>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Select a topic from the sidebar to begin your networking journey\n                  </p>\n                  <Badge variant=\"secondary\" className=\"text-sm\">\n                    {courseContent.topics.length} topics available\n                  </Badge>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n        </main>\n\n        {/* Placeholder Area - 30% */}\n        <aside className=\"w-[30%] border-l bg-gradient-to-br from-muted/10 to-muted/30 p-6\">\n          <Card className=\"h-full bg-gradient-to-br from-background to-muted/20 shadow-lg\">\n            <CardHeader>\n              <h3 className=\"font-semibold text-foreground flex items-center gap-2\">\n                <div className=\"p-2 bg-primary/10 rounded-lg\">\n                  <Settings className=\"h-4 w-4 text-primary\" />\n                </div>\n                Learning Tools\n              </h3>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <Card className=\"p-4 bg-primary/5 border-primary/20\">\n                <h4 className=\"font-medium text-foreground mb-2\">📝 Take Notes</h4>\n                <p className=\"text-sm text-muted-foreground\">\n                  Jot down important concepts as you learn\n                </p>\n              </Card>\n              <Card className=\"p-4 bg-green-500/5 border-green-500/20\">\n                <h4 className=\"font-medium text-foreground mb-2\">🎯 Practice</h4>\n                <p className=\"text-sm text-muted-foreground\">\n                  Test your knowledge with exercises\n                </p>\n              </Card>\n              <Card className=\"p-4 bg-blue-500/5 border-blue-500/20\">\n                <h4 className=\"font-medium text-foreground mb-2\">💬 Discuss</h4>\n                <p className=\"text-sm text-muted-foreground\">\n                  Join the community discussions\n                </p>\n              </Card>\n            </CardContent>\n          </Card>\n        </aside>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}